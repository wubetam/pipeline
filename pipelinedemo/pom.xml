<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.anomeg</groupId>
	<artifactId>pipelinedemo</artifactId>
	<version>0.1.0</version>
	<packaging>jar</packaging>

	<name>pipelinedemo</name>
	<description>Demo project for Pipeline</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<docker.image.prefix>wube</docker.image.prefix>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
	<!-- 	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency> -->


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency> 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.webjars</groupId>
					<artifactId>jquery</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>1.4.9</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<!-- <imageName>wube/${project.artifactId}</imageName> -->
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>



			<plugin>

				<groupId>org.codehaus.mojo</groupId>

				<artifactId>build-helper-maven-plugin</artifactId>

				<version>1.9</version>

				<executions>

					<execution>

						<id>add-integration-test-source-as-test-sources</id>

						<phase>process-resources</phase>

						<goals>

							<goal>add-test-source</goal>

						</goals>

						<configuration>

							<sources>

								<source>src/intTest/java</source>

							</sources>

						</configuration>

					</execution>

					<execution>

						<id>add-integration-test-resources</id>

						<phase>process-resources</phase>

						<goals>

							<goal>add-test-resource</goal>

						</goals>

						<configuration>

							<!-- Configures the resource directory of our integration tests -->

							<resources>

								<resource>

									<directory>src/intTest/resources</directory>

								</resource>

							</resources>

						</configuration>

					</execution>

				</executions>

			</plugin>

			<plugin>

				<groupId>org.apache.maven.plugins</groupId>

				<artifactId>maven-surefire-plugin</artifactId>

				<configuration>

					<argLine>${surefireArgLine}</argLine>

					<excludes>

						<exclude>**/*IT.java</exclude>

					</excludes>

				</configuration>

			</plugin>

			<plugin>

				<groupId>org.apache.maven.plugins</groupId>

				<artifactId>maven-failsafe-plugin</artifactId>

				<executions>

					<execution>

						<goals>

							<goal>integration-test</goal>

							<goal>verify</goal>

						</goals>

						<configuration>

							<argLine>${failsafeArgLine}</argLine>

						</configuration>

					</execution>

				</executions>

			</plugin>



			<plugin>

				<groupId>org.jacoco</groupId>

				<artifactId>jacoco-maven-plugin</artifactId>

				<version>0.7.7.201606060606</version>

				<executions>

					<execution>

						<id>pre-unit-test</id>

						<goals>

							<goal>prepare-agent</goal>

						</goals>

						<configuration>

							<destFile>${basedir}/target/coverage-reports/jacoco-ut.exec</destFile>

							<propertyName>surefireArgLine</propertyName>

						</configuration>

					</execution>

					<execution>

						<id>post-unit-test</id>

						<phase>verify</phase>

						<goals>

							<goal>report</goal>

						</goals>

						<configuration>

							<dataFile>${basedir}/target/coverage-reports/jacoco-ut.exec</dataFile>

							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>

						</configuration>

					</execution>



					<execution>

						<id>pre-integration-test</id>

						<phase>pre-integration-test</phase>

						<goals>

							<goal>prepare-agent</goal>

						</goals>

						<configuration>

							<destFile>${basedir}/target/coverage-reports/jacoco-it.exec</destFile>

							<propertyName>failsafeArgLine</propertyName>

						</configuration>

					</execution>

					<execution>

						<id>post-integration-test</id>

						<phase>post-integration-test</phase>

						<goals>

							<goal>report</goal>

						</goals>

						<configuration>

							<dataFile>${basedir}/target/coverage-reports/jacoco-ut.exec</dataFile>

							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>

						</configuration>

					</execution>

				</executions>

			</plugin>
			<!-- end::plugin[] -->
		</plugins>
	</build>


</project>
